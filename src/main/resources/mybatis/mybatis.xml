<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
		PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<!--全局缓存配置，默认为true-->
		<!--<setting name="cacheEnabled" value="true"/>-->

		<!--当开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属性会按需加载,默认 false (true in ≤3.4.1)-->
		<!--<setting name="aggressiveLazyLoading" value="false"/>-->

		<!--是否允许单一语句返回多结果集（需要兼容驱动）默认： true-->
		<!--<setting name="multipleResultSetsEnabled" value="true"/>-->

		<!--使用列标签代替列名。不同的驱动在这方面会有不同的表现， 具体可参考相关驱动文档或通过测试这两种不同的模式来观察所用驱动的结果-->
		<!--<setting name="useColumnLabel" value="true"/>-->

		<!--允许 JDBC 支持自动生成主键，需要驱动兼容。 如果设置为 true 则这个设置强制使用自动生成主键，尽管一些驱动不能兼容但仍可正常工作（比如 Derby）默认：false-->
		<!--<setting name="useGeneratedKeys" value="false"/>-->

		<!--指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示取消自动映射；PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 FULL 会自动映射任意复杂的结果集（无论是否嵌套）-->
		<!--<setting name="autoMappingBehavior" value="PARTIAL"/>-->

		<!--指定发现自动映射目标未知列（或者未知属性类型）的行为。
			NONE: 不做任何反应
			WARNING: 输出提醒日志 ('org.apache.ibatis.session.AutoMappingUnknownColumnBehavior' 的日志等级必须设置为 WARN)
			FAILING: 映射失败 (抛出 SqlSessionException)-->
		<!--<setting name="autoMappingUnknownColumnBehavior" value="NONE"/>-->

		<!--配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新-->
		<!--<setting name="defaultExecutorType" value="SIMPLE"/>-->

		<!--设置超时时间，它决定驱动等待数据库响应的秒数 默认： null-->
		<!--<setting name="defaultStatementTimeout" value=""/>-->

		<!--为驱动的结果集获取数量（fetchSize）设置一个提示值。此参数只可以在查询设置中被覆盖 默认：null-->
		<!--<setting name="defaultFetchSize" value=""/>-->

		<!--允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为false-->
		<!--<setting name="safeRowBoundsEnabled" value="false"/>-->

		<!--允许在嵌套语句中使用分页（ResultHandler）。如果允许使用则设置为false-->
		<!--<setting name="safeResultHandlerEnabled" value="false"/>-->

		<!--是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射 默认：false-->
		<!--<setting name="mapUnderscoreToCamelCase" value="false"/>-->

		<!--MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，
			这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据-->
		<!--<setting name="localCacheScope" value="SESSION"/>-->

		<!--指定哪个对象的方法触发一次延迟加载-->
		<!--<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>-->

		<!--指定动态 SQL 生成的默认语言, 一个类型别名或完全限定类名-->
		<!--<setting name="defaultScriptingLanguage" value="org.apache.ibatis.scripting.xmltags.XMLLanguageDriver"/>-->

		<!--指定 Enum 使用的默认 TypeHandler 。 (从3.4.5开始), 一个类型别名或完全限定类名-->
		<!--<setting name="defaultEnumTypeHandler" value="org.apache.ibatis.type.EnumTypeHandler"/>-->

		<!--指定当结果集中值为 null 的时候是否调用映射对象的 setter（map 对象时为 put）方法，这对于有 Map.keySet() 依赖或 null 值初始化的时候是有用的。
			注意基本类型（int、boolean等）是不能设置成 null 的-->
		<!--<setting name="callSettersOnNulls" value="false"/>-->

		<!--当返回行的所有列都是空时，MyBatis默认返回null。
			当开启这个设置时，MyBatis会返回一个空实例。 请注意，它也适用于嵌套的结果集 (i.e. collectioin and association)。（从3.4.2开始）-->
		<!--<setting name="returnInstanceForEmptyRow" value="false"/>-->

		<!--指定 MyBatis 增加到日志名称的前缀-->
		<!--<setting name="logPrefix" value=""/>-->

		<!--指定 Mybatis 创建具有延迟加载能力的对象所用到的代理工具 CGLIB | JAVASSIST-->
		<!--<setting name="proxyFactory" value="JAVASSIST"/>-->

		<!--指定VFS的实现, 自定义VFS的实现的类全限定名，以逗号分隔-->
		<!--<setting name="vfsImpl" value=""/>-->

		<!--允许使用方法签名中的名称作为语句参数名称。 为了使用该特性，你的工程必须采用Java 8编译，并且加上-parameters选项 （从3.4.1开始）-->
		<!--<setting name="useActualParamName" value=""true/>-->

		<!--指定一个提供Configuration实例的类。
			这个被返回的Configuration实例用来加载被反序列化对象的懒加载属性值。 这个类必须包含一个签名方法static Configuration getConfiguration(). (从 3.2.3 版本开始)-->
		<!--<setting name="configurationFactory" value=""/>-->

		<!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER -->
		<setting name="jdbcTypeForNull" value="VARCHAR"/>

		<!--指定 MyBatis 所用日志的具体实现，未指定时将自动查找
			SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING-->
        <setting name="logImpl" value="SLF4J"/>

		<!--延迟加载，默认false， 开启后可通过fetchType实现定制化-->
        <setting name="lazyLoadingEnabled" value="false" />

	</settings>

	<typeAliases>
		<package name="com.tinyxiong.flowabledemo.demo.domain"/>
	</typeAliases>

	<!--<typeHandlers></typeHandlers>-->

	<!--<plugins>
		<plugin interceptor="com.github.pagehelper.PageInterceptor">
			<property name="offsetAsPageNum" value="true"/>
			<property name="rowBoundsWithCount" value="true"/>
		</plugin>
	</plugins>-->

	<mappers>
		<mapper resource="config/mappers/TestUserMapper.xml"/>
	</mappers>

</configuration>
